DECLARE

	i_BODY_QUERY CLOB;
	i_TRAILER_QUERY CLOB;

BEGIN 

	i_BODY_QUERY := TO_CLOB('SELECT
      AST.AST_ARE_NAME "REGION",
      AST.AST_TERMINAL_ID "TERMINAL",
      AST.AST_ALO_LOCATION_ID "LOCATION",
      AJL.AJL_TIMESTAMP "DATE TIME",
      AJL.AJL_EJ_DATA "EXCEPTION"
	FROM
      ATM_STATIONS AST
      JOIN ATM_JOURNAL_LOG AJL ON AST.AST_ID = AJL.AJL_AST_ID
      AND {Txn_Date}
	WHERE AJL.AJL_EJ_DATA LIKE ''%*E*%''
	ORDER BY
      AST.AST_ARE_NAME ASC,
      AST.AST_TERMINAL_ID ASC,
      AJL.AJL_TIMESTAMP ASC');
	  
	  UPDATE REPORT_DEFINITION SET RED_BODY_QUERY = i_BODY_QUERY WHERE RED_NAME = 'ATM Daily Exception Messages';
	  
	  
	  i_BODY_QUERY := TO_CLOB('SELECT
      "TRAN MNEM",
      SUM("GOOD TRANS") "GOOD TRANS",
      SUM("BAD TRANS") "BAD TRANS",
      COUNT("TOTAL TRANS") "TOTAL TRANS",
      SUM("SHORT DISP") "SHORT DISP",
      SUM("NO DISP") "NO DISP",
      SUM("OVER DISPENSE") "OVER DISPENSE",
      0 "HARDWARE FAILURE",
      SUM("CASH DISPENSED") "CASH DISPENSED",
      SUM("DEPOSITS") "DEPOSITS",
      SUM("BILL/INS PAYMENTS") "BILL/INS PAYMENTS",
      SUM("TRANSFERS") "TRANSFERS"
	FROM (
	SELECT
      CASE 
	    WHEN TXN.TRL_ISS_NAME IS NULL AND TXN.TRL_POST_COMPLETION_CODE = ''R'' AND TXN.TRL_TSC_CODE IN (SELECT CTR_CODE FROM CBC_TRAN_CODE WHERE CTR_CHANNEL = ''BNT'')
	        THEN (SELECT CTR_REV_MNEM FROM CBC_TRAN_CODE WHERE CTR_CODE=TXN.TRL_TSC_CODE AND CTR_CHANNEL=''BNT'' AND CTR_DEBIT_CREDIT in (''DEBIT'', ''CREDIT'') AND ROWNUM=1)
	    WHEN TXN.TRL_ISS_NAME IS NULL AND TXN.TRL_POST_COMPLETION_CODE IS NULL AND TXN.TRL_TSC_CODE IN (SELECT CTR_CODE FROM CBC_TRAN_CODE WHERE CTR_CHANNEL = ''BNT'')
	        THEN (SELECT CTR_MNEM FROM CBC_TRAN_CODE WHERE CTR_CODE=TXN.TRL_TSC_CODE AND CTR_CHANNEL=''BNT'' AND CTR_DEBIT_CREDIT in (''DEBIT'', ''CREDIT'') AND ROWNUM=1)
	    WHEN TXN.TRL_ISS_NAME IS NOT NULL AND TXN.TRL_POST_COMPLETION_CODE = ''R'' 
	        THEN CTR.CTR_REV_MNEM 
		ELSE CTR.CTR_MNEM END AS "TRAN MNEM",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_AMT_COMPLETED < TXN.TRL_AMT_TXN THEN 1 ELSE 0 END AS "SHORT DISP",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_AMT_COMPLETED > TXN.TRL_AMT_TXN THEN 1 ELSE 0 END AS "OVER DISPENSE",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_POST_COMPLETION_CODE IS NULL THEN 1 ELSE 0 END AS "GOOD TRANS",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE > 0 THEN 1 ELSE 0 END AS "BAD TRANS",
      TXN.TRL_ID "TOTAL TRANS",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE = ''R'' THEN 1 ELSE 0 END AS "NO DISP",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_TSC_CODE IN (1, 128, 142, 143) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "CASH DISPENSED",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_TSC_CODE IN (21, 24, 26, 122) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "DEPOSITS",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_TSC_CODE IN (50, 133) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "BILL/INS PAYMENTS",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_TSC_CODE IN (40, 42, 43, 44, 45, 46, 47, 52) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "TRANSFERS"
	FROM
      TRANSACTION_LOG TXN
      JOIN TRANSACTION_LOG_CUSTOM TXNC ON TXN.TRL_ID=TXNC.TRL_ID
      JOIN CBC_TRAN_CODE CTR ON TXN.TRL_TSC_CODE = CTR.CTR_CODE AND TXNC.TRL_ORIGIN_CHANNEL = CTR.CTR_CHANNEL
      JOIN ATM_STATIONS AST ON TXN.TRL_CARD_ACPT_TERMINAL_IDENT = AST.AST_TERMINAL_ID
      JOIN ATM_BRANCHES ABR ON AST.AST_ABR_ID = ABR.ABR_ID
	WHERE
      TXN.TRL_TQU_ID in (''F'',''R'')
      AND TXN.TRL_FRD_REV_INST_ID IS NULL
      AND TXN.TRL_MCC_ID = 6011
      AND TXN.TRL_DEO_NAME = {V_Deo_Name}
	  AND {Txn_Criteria}
      AND {Txn_Date}	  
	)
	GROUP BY
      "TRAN MNEM"
	ORDER BY
      "TRAN MNEM" ASC
	START SELECT 
      "TRAN MNEM",
      SUM("GOOD TRANS") "GOOD TRANS",
      SUM("BAD TRANS") "BAD TRANS",
      COUNT("TOTAL TRANS") "TOTAL TRANS",
      SUM("SHORT DISP") "SHORT DISP",
      SUM("NO DISP") "NO DISP",
      SUM("OVER DISPENSE") "OVER DISPENSE",
      0 "HARDWARE FAILURE",
      SUM("CASH DISPENSED") "CASH DISPENSED",
      SUM("DEPOSITS") "DEPOSITS",
      SUM("BILL/INS PAYMENTS") "BILL/INS PAYMENTS",
      SUM("TRANSFERS") "TRANSFERS"
	FROM (
	SELECT
      CASE 
	    WHEN TXN.TRL_ISS_NAME IS NULL AND TXN.TRL_POST_COMPLETION_CODE = ''R'' AND TXN.TRL_TSC_CODE IN (SELECT CTR_CODE FROM CBC_TRAN_CODE WHERE CTR_CHANNEL = ''BNT'')
	        THEN (SELECT CTR_REV_MNEM FROM CBC_TRAN_CODE WHERE CTR_CODE=TXN.TRL_TSC_CODE AND CTR_CHANNEL=''BNT'' AND CTR_DEBIT_CREDIT in (''DEBIT'', ''CREDIT'') AND ROWNUM=1)
	    WHEN TXN.TRL_ISS_NAME IS NULL AND TXN.TRL_POST_COMPLETION_CODE IS NULL AND TXN.TRL_TSC_CODE IN (SELECT CTR_CODE FROM CBC_TRAN_CODE WHERE CTR_CHANNEL = ''BNT'')
	        THEN (SELECT CTR_MNEM FROM CBC_TRAN_CODE WHERE CTR_CODE=TXN.TRL_TSC_CODE AND CTR_CHANNEL=''BNT'' AND CTR_DEBIT_CREDIT in (''DEBIT'', ''CREDIT'') AND ROWNUM=1)
	    WHEN TXN.TRL_ISS_NAME IS NOT NULL AND TXN.TRL_POST_COMPLETION_CODE = ''R'' 
	        THEN CTR.CTR_REV_MNEM 
		ELSE CTR.CTR_MNEM END AS "TRAN MNEM",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_AMT_COMPLETED < TXN.TRL_AMT_TXN THEN 1 ELSE 0 END AS "SHORT DISP",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_AMT_COMPLETED > TXN.TRL_AMT_TXN THEN 1 ELSE 0 END AS "OVER DISPENSE",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_POST_COMPLETION_CODE IS NULL THEN 1 ELSE 0 END AS "GOOD TRANS",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE > 0 THEN 1 ELSE 0 END AS "BAD TRANS",
      TXN.TRL_ID "TOTAL TRANS",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE = ''R'' THEN 1 ELSE 0 END AS "NO DISP",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_TSC_CODE IN (1, 128, 142, 143) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "CASH DISPENSED",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_TSC_CODE IN (21, 24, 26, 122) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "DEPOSITS",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_TSC_CODE IN (50, 133) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "BILL/INS PAYMENTS",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_TSC_CODE IN (40, 42, 43, 44, 45, 46, 47, 52) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "TRANSFERS"
	FROM
      TRANSACTION_LOG TXN
      JOIN TRANSACTION_LOG_CUSTOM TXNC ON TXN.TRL_ID=TXNC.TRL_ID
      JOIN CBC_TRAN_CODE CTR ON TXN.TRL_TSC_CODE = CTR.CTR_CODE AND TXNC.TRL_ORIGIN_CHANNEL = CTR.CTR_CHANNEL
      JOIN CBC_BANK CBA ON LPAD(TXN.TRL_ACQR_INST_ID, 10, ''0'') = LPAD(CBA.CBA_CODE, 10, ''0'')
	WHERE
      TXN.TRL_TQU_ID in (''F'',''R'')
      AND TXN.TRL_FRD_REV_INST_ID IS NULL
      AND TXN.TRL_MCC_ID = 6011
      AND TXN.TRL_DEO_NAME IS NULL
      AND TXN.TRL_ISS_NAME = {V_Iss_Name}
      AND {Txn_Date}
	)
	GROUP BY
      "TRAN MNEM"
	ORDER BY
      "TRAN MNEM" ASC
	END');
	
	
		i_TRAILER_QUERY:= TO_CLOB('SELECT
      SUM("GOOD TRANS") "GOOD TRANS",
      SUM("BAD TRANS") "BAD TRANS",
      COUNT("TOTAL TRANS") "TOTAL TRANS",
      0 "SHORT DISP",
      SUM("NO DISP") "NO DISP",
      0 "OVER DISPENSE",
      0 "HARDWARE FAILURE",
      SUM("CASH DISPENSED" - "CASH DISP REV") "CASH DISPENSED",
      SUM("DEPOSITS" - "DEPOSITS REV") "DEPOSITS",
      SUM("BILL/INS PAYMENTS" - "BP REV") "BILL/INS PAYMENTS",
      SUM("TRANSFERS" - "TRANSFERS REV") "TRANSFERS"
	FROM (
	SELECT
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_AMT_COMPLETED < TXN.TRL_AMT_TXN THEN 1 ELSE 0 END AS "SHORT DISP",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_AMT_COMPLETED > TXN.TRL_AMT_TXN THEN 1 ELSE 0 END AS "OVER DISPENSE",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_POST_COMPLETION_CODE IS NULL THEN 1 ELSE 0 END AS "GOOD TRANS",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE > 0 THEN 1 ELSE 0 END AS "BAD TRANS",
      TXN.TRL_ID "TOTAL TRANS",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE = ''R'' THEN 1 ELSE 0 END AS "NO DISP",
	  CASE WHEN TXN.TRL_POST_COMPLETION_CODE = ''R'' AND TXN.TRL_TSC_CODE IN (1, 128, 142, 143) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "CASH DISP REV",
	  CASE WHEN TXN.TRL_POST_COMPLETION_CODE = ''R'' AND TXN.TRL_TSC_CODE IN (21, 24, 26, 122) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "DEPOSITS REV",
	  CASE WHEN TXN.TRL_POST_COMPLETION_CODE = ''R'' AND TXN.TRL_TSC_CODE IN (50, 133) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "BP REV",
	  CASE WHEN TXN.TRL_POST_COMPLETION_CODE = ''R'' AND TXN.TRL_TSC_CODE IN (40, 42, 43, 44, 45, 46, 47, 52) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "TRANSFERS REV",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 and TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_TSC_CODE IN (1, 128, 142, 143) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "CASH DISPENSED",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 and TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_TSC_CODE IN (21, 24, 26, 122) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "DEPOSITS",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 and TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_TSC_CODE IN (50, 133) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "BILL/INS PAYMENTS",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 and TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_TSC_CODE IN (40, 42, 43, 44, 45, 46, 47, 52) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "TRANSFERS"
	FROM
      TRANSACTION_LOG TXN
      JOIN TRANSACTION_LOG_CUSTOM TXNC ON TXN.TRL_ID=TXNC.TRL_ID
      JOIN CBC_TRAN_CODE CTR ON TXN.TRL_TSC_CODE = CTR.CTR_CODE AND TXNC.TRL_ORIGIN_CHANNEL = CTR.CTR_CHANNEL
      JOIN ATM_STATIONS AST ON TXN.TRL_CARD_ACPT_TERMINAL_IDENT = AST.AST_TERMINAL_ID
      JOIN ATM_BRANCHES ABR ON AST.AST_ABR_ID = ABR.ABR_ID
	WHERE
     TXN.TRL_TQU_ID in (''F'',''R'')
	 AND TXN.TRL_FRD_REV_INST_ID IS NULL
	   AND TXN.TRL_MCC_ID = 6011
       AND TXN.TRL_DEO_NAME = {V_Deo_Name}
	  AND {Txn_Criteria}
      AND {Txn_Date}
	)
	START SELECT
      SUM("GOOD TRANS") "GOOD TRANS",
      SUM("BAD TRANS") "BAD TRANS",
      COUNT("TOTAL TRANS") "TOTAL TRANS",
      0 "SHORT DISP",
      SUM("NO DISP") "NO DISP",
      0 "OVER DISPENSE",
      0 "HARDWARE FAILURE",
      SUM("CASH DISPENSED" - "CASH DISP REV") "CASH DISPENSED",
      SUM("DEPOSITS" - "DEPOSITS REV") "DEPOSITS",
      SUM("BILL/INS PAYMENTS" - "BP REV") "BILL/INS PAYMENTS",
      SUM("TRANSFERS" - "TRANSFERS REV") "TRANSFERS"
	FROM (
	SELECT
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_AMT_COMPLETED < TXN.TRL_AMT_TXN THEN 1 ELSE 0 END AS "SHORT DISP",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_AMT_COMPLETED > TXN.TRL_AMT_TXN THEN 1 ELSE 0 END AS "OVER DISPENSE",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_ACTION_RESPONSE_CODE = 0 AND TXN.TRL_POST_COMPLETION_CODE IS NULL THEN 1 ELSE 0 END AS "GOOD TRANS",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE > 0 THEN 1 ELSE 0 END AS "BAD TRANS",
      TXN.TRL_ID "TOTAL TRANS",
      CASE WHEN TXN.TRL_POST_COMPLETION_CODE = ''R'' THEN 1 ELSE 0 END AS "NO DISP",
	  CASE WHEN TXN.TRL_POST_COMPLETION_CODE = ''R'' AND TXN.TRL_TSC_CODE IN (1, 128, 142, 143) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "CASH DISP REV",
	  CASE WHEN TXN.TRL_POST_COMPLETION_CODE = ''R'' AND TXN.TRL_TSC_CODE IN (21, 24, 26, 122) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "DEPOSITS REV",
	  CASE WHEN TXN.TRL_POST_COMPLETION_CODE = ''R'' AND TXN.TRL_TSC_CODE IN (50, 133) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "BP REV",
	  CASE WHEN TXN.TRL_POST_COMPLETION_CODE = ''R'' AND TXN.TRL_TSC_CODE IN (40, 42, 43, 44, 45, 46, 47, 52) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "TRANSFERS REV",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 and TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_TSC_CODE IN (1, 128, 142, 143) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "CASH DISPENSED",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 and TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_TSC_CODE IN (21, 24, 26, 122) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "DEPOSITS",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 and TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_TSC_CODE IN (50, 133) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "BILL/INS PAYMENTS",
      CASE WHEN TXN.TRL_ACTION_RESPONSE_CODE = 0 and TXN.TRL_POST_COMPLETION_CODE is null AND TXN.TRL_TSC_CODE IN (40, 42, 43, 44, 45, 46, 47, 52) THEN TXN.TRL_AMT_TXN ELSE 0 END AS "TRANSFERS"
	FROM
      TRANSACTION_LOG TXN
      JOIN TRANSACTION_LOG_CUSTOM TXNC ON TXN.TRL_ID=TXNC.TRL_ID
      JOIN CBC_TRAN_CODE CTR ON TXN.TRL_TSC_CODE = CTR.CTR_CODE AND TXNC.TRL_ORIGIN_CHANNEL = CTR.CTR_CHANNEL
      JOIN CBC_BANK CBA ON LPAD(TXN.TRL_ACQR_INST_ID, 10, ''0'') = LPAD(CBA.CBA_CODE, 10, ''0'')
	WHERE
      TXN.TRL_TQU_ID in (''F'',''R'')
	  AND TXN.TRL_FRD_REV_INST_ID IS NULL
      AND TXN.TRL_DEO_NAME IS NULL
      AND TXN.TRL_MCC_ID=6011
      AND TXN.TRL_ISS_NAME = {V_Iss_Name}
      AND {Txn_Date}
	)
	END');
	
	
	
	UPDATE REPORT_DEFINITION SET RED_BODY_QUERY = i_BODY_QUERY , RED_TRAILER_QUERY = i_TRAILER_QUERY WHERE RED_NAME = 'ATM Transaction List (Summary)';
	
	
	i_BODY_QUERY := TO_CLOB('SELECT
      TXN.TRL_TQU_ID "TXN QUALIFIER",
      CBA.CBA_NAME "BANK NAME",
      CONCAT(LPAD(CBA.CBA_CODE, 4, ''0''),  TXN.TRL_CARD_ACPT_TERMINAL_IDENT) "ATM CODE",
      CBA.CBA_MNEM "BANK MNEM",
      TXN.TRL_DEST_STAN "SEQ NUMBER",
      SUBSTR(TXN.TRL_RRN, 9, 4) "TRACE NUMBER",
      TXN.TRL_PAN "ATM CARD NUMBER",
      TXN.TRL_PAN_EKY_ID,
      LPAD(CBA.CBA_CODE, 4, ''0'') "BANK CODE",
      TXN.TRL_DATETIME_LOCAL_TXN "DATE",
      TXN.TRL_DATETIME_LOCAL_TXN "TIME",
      CASE 
	    WHEN TXN.TRL_ISS_NAME IS NULL AND TXN.TRL_POST_COMPLETION_CODE = ''R'' AND TXN.TRL_TSC_CODE IN (SELECT CTR_CODE FROM CBC_TRAN_CODE WHERE CTR_CHANNEL = ''BNT'')
	        THEN (SELECT CTR_REV_MNEM FROM CBC_TRAN_CODE WHERE CTR_CODE=TXN.TRL_TSC_CODE AND CTR_CHANNEL=''BNT'' AND CTR_DEBIT_CREDIT in (''DEBIT'', ''CREDIT'') AND ROWNUM=1)
	    WHEN TXN.TRL_ISS_NAME IS NULL AND TXN.TRL_POST_COMPLETION_CODE IS NULL AND TXN.TRL_TSC_CODE IN (SELECT CTR_CODE FROM CBC_TRAN_CODE WHERE CTR_CHANNEL = ''BNT'')
	        THEN (SELECT CTR_MNEM FROM CBC_TRAN_CODE WHERE CTR_CODE=TXN.TRL_TSC_CODE AND CTR_CHANNEL=''BNT'' AND CTR_DEBIT_CREDIT in (''DEBIT'', ''CREDIT'') AND ROWNUM=1)
	    WHEN TXN.TRL_ISS_NAME IS NOT NULL AND TXN.TRL_POST_COMPLETION_CODE = ''R'' 
	        THEN CTR.CTR_REV_MNEM 
		ELSE CTR.CTR_MNEM END AS "TRAN MNEM",
      CASE WHEN TXN.TRL_ACCOUNT_TYPE_1_ATP_ID = 10 THEN ''SA'' WHEN TXN.TRL_ACCOUNT_TYPE_1_ATP_ID = 20 THEN ''CA'' ELSE '''' END AS "FROM ACC TYPE",
      TXN.TRL_ACCOUNT_1_ACN_ID "FROM ACCOUNT NO",
      TXN.TRL_ACCOUNT_1_ACN_ID_EKY_ID,
      CASE WHEN TXN.TRL_ACCOUNT_TYPE_2_ATP_ID = 10 THEN ''SA'' WHEN TXN.TRL_ACCOUNT_TYPE_2_ATP_ID = 20 THEN ''CA'' ELSE '''' END AS "TO ACC TYPE",
      TXN.TRL_ACCOUNT_2_ACN_ID "TO ACCOUNT NO",
      TXN.TRL_ACCOUNT_2_ACN_ID_EKY_ID,
      TXN.TRL_AMT_TXN "AMOUNT",
      TXN.TRL_ACTION_RESPONSE_CODE "VOID CODE",
      ARC.ARC_NAME "COMMENT"
	FROM
      TRANSACTION_LOG TXN
      JOIN TRANSACTION_LOG_CUSTOM TXNC ON TXN.TRL_ID=TXNC.TRL_ID
      JOIN CBC_TRAN_CODE CTR ON TXN.TRL_TSC_CODE = CTR.CTR_CODE AND TXNC.TRL_ORIGIN_CHANNEL = CTR.CTR_CHANNEL
      JOIN CBC_BANK CBA ON LPAD(TXN.TRL_ACQR_INST_ID, 10, ''0'') = LPAD(CBA.CBA_CODE, 10, ''0'')
      JOIN AUTH_RESULT_CODE ARC ON TXN.TRL_ACTION_RESPONSE_CODE = ARC.ARC_CODE
	WHERE
      TXN.TRL_TQU_ID IN (''F'',''R'')
      AND TXN.TRL_DEO_NAME IS NULL
      AND TXN.TRL_MCC_ID=6011
	  AND TXN.TRL_FRD_REV_INST_ID IS NULL
       AND TXN.TRL_ISS_NAME = {V_Iss_Name}
      AND {Bank_Code}
      AND {Txn_Date}
	ORDER BY
      CBA.CBA_NAME ASC,
      TXN.TRL_SYSTEM_TIMESTAMP ASC,
      TXN.TRL_DEST_STAN ASC,
      TXN.TRL_RRN ASC');
	  
	  UPDATE REPORT_DEFINITION SET RED_BODY_QUERY = i_BODY_QUERY WHERE RED_NAME = 'ATM Transaction List (Issuer)';
	  
	  	  i_BODY_QUERY := TO_CLOB('SELECT
      TXN.TRL_TQU_ID "TXN QUALIFIER",
      ABR.ABR_CODE "BRANCH CODE",
      ABR.ABR_NAME "BRANCH NAME",
      SUBSTR(AST.AST_TERMINAL_ID, -4) "TERMINAL",
      AST.AST_ALO_LOCATION_ID "LOCATION",
      TXN.TRL_DEST_STAN "SEQ NUMBER",
      SUBSTR(TXN.TRL_RRN, 9, 4) "TRACE NUMBER",
      TXN.TRL_PAN "ATM CARD NUMBER",
      TXN.TRL_PAN_EKY_ID,
      LPAD(CBA.CBA_CODE, 4, ''0'') "BANK CODE",
      TXN.TRL_DATETIME_LOCAL_TXN "DATE",
      TXN.TRL_DATETIME_LOCAL_TXN "TIME",
      CASE 
	    WHEN TXN.TRL_ISS_NAME IS NULL AND TXN.TRL_POST_COMPLETION_CODE = ''R'' AND TXN.TRL_TSC_CODE IN (SELECT CTR_CODE FROM CBC_TRAN_CODE WHERE CTR_CHANNEL = ''BNT'')
	        THEN (SELECT CTR_REV_MNEM FROM CBC_TRAN_CODE WHERE CTR_CODE=TXN.TRL_TSC_CODE AND CTR_CHANNEL=''BNT'' AND CTR_DEBIT_CREDIT in (''DEBIT'', ''CREDIT'') AND ROWNUM=1)
	    WHEN TXN.TRL_ISS_NAME IS NULL AND TXN.TRL_POST_COMPLETION_CODE IS NULL AND TXN.TRL_TSC_CODE IN (SELECT CTR_CODE FROM CBC_TRAN_CODE WHERE CTR_CHANNEL = ''BNT'')
	        THEN (SELECT CTR_MNEM FROM CBC_TRAN_CODE WHERE CTR_CODE=TXN.TRL_TSC_CODE AND CTR_CHANNEL=''BNT'' AND CTR_DEBIT_CREDIT in (''DEBIT'', ''CREDIT'') AND ROWNUM=1)
	    WHEN TXN.TRL_ISS_NAME IS NOT NULL AND TXN.TRL_POST_COMPLETION_CODE = ''R'' 
	        THEN CTR.CTR_REV_MNEM 
		ELSE CTR.CTR_MNEM END AS "TRAN MNEM",
      CASE WHEN TXN.TRL_ACCOUNT_TYPE_1_ATP_ID = 10 THEN ''SA'' WHEN TXN.TRL_ACCOUNT_TYPE_1_ATP_ID = 20 THEN ''CA'' ELSE '''' END AS "FROM ACC TYPE",
      TXN.TRL_ACCOUNT_1_ACN_ID "FROM ACCOUNT NO",
      TXN.TRL_ACCOUNT_1_ACN_ID_EKY_ID,
      CASE WHEN TXN.TRL_ACCOUNT_TYPE_2_ATP_ID = 10 THEN ''SA'' WHEN TXN.TRL_ACCOUNT_TYPE_2_ATP_ID = 20 THEN ''CA'' ELSE '''' END AS "TO ACC TYPE",
      TXN.TRL_ACCOUNT_2_ACN_ID "TO ACCOUNT NO",
      TXN.TRL_ACCOUNT_2_ACN_ID_EKY_ID,
      TXN.TRL_AMT_TXN "AMOUNT",
      TXN.TRL_ACTION_RESPONSE_CODE "VOID CODE",
      ARC.ARC_NAME "COMMENT"
	FROM
      TRANSACTION_LOG TXN
      JOIN TRANSACTION_LOG_CUSTOM TXNC ON TXN.TRL_ID=TXNC.TRL_ID
      JOIN CBC_TRAN_CODE CTR ON TXN.TRL_TSC_CODE = CTR.CTR_CODE AND TXNC.TRL_ORIGIN_CHANNEL = CTR.CTR_CHANNEL
      LEFT JOIN CBC_BIN CBI ON TXNC.TRL_CARD_BIN = CBI.CBI_BIN
      LEFT JOIN CBC_BANK CBA ON CBI.CBI_CBA_ID = CBA.CBA_ID
      JOIN AUTH_RESULT_CODE ARC ON TXN.TRL_ACTION_RESPONSE_CODE = ARC.ARC_CODE
      JOIN ATM_STATIONS AST ON TXN.TRL_CARD_ACPT_TERMINAL_IDENT = AST.AST_TERMINAL_ID
      JOIN ATM_BRANCHES ABR ON AST.AST_ABR_ID = ABR.ABR_ID
	WHERE
      TXN.TRL_TQU_ID IN (''F'',''R'')
      AND TXN.TRL_MCC_ID = 6011
	  AND TXN.TRL_FRD_REV_INST_ID IS NULL
      AND TXN.TRL_DEO_NAME = {V_Deo_Name}
      AND {Branch_Code}
      AND {Terminal}
      AND {Txn_Date}
	ORDER BY
      ABR.ABR_CODE ASC,
      AST.AST_TERMINAL_ID ASC,
      TXN.TRL_SYSTEM_TIMESTAMP ASC,
      TXN.TRL_DEST_STAN ASC,
      TXN.TRL_RRN ASC');
	  
	  UPDATE REPORT_DEFINITION SET RED_BODY_QUERY = i_BODY_QUERY WHERE RED_NAME = 'ATM Transaction List (On-Us/Acquirer)';
	  
	  
	  i_BODY_QUERY := TO_CLOB('SELECT
      "BRANCH CODE",
      "BRANCH NAME",
      "TERMINAL",
      SUM("A/R PER TERMINAL") "A/R PER TERMINAL",
      COUNT("ITEMS") "ITEMS",
      SUM("A/R PER TERMINAL") "TOTAL A/R AMOUNT"
FROM (
SELECT
      ABR.ABR_CODE "BRANCH CODE",
      ABR.ABR_NAME "BRANCH NAME",
      SUBSTR(AST.AST_TERMINAL_ID, -4) "TERMINAL",
      TXN.TRL_AMT_TXN "A/R PER TERMINAL",
      TXN.TRL_ID "ITEMS"
FROM
      TRANSACTION_LOG TXN
      JOIN TRANSACTION_LOG_CUSTOM TXNC ON TXN.TRL_ID=TXNC.TRL_ID
      JOIN CBC_TRAN_CODE CTR ON TXN.TRL_TSC_CODE = CTR.CTR_CODE AND TXNC.TRL_ORIGIN_CHANNEL = CTR.CTR_CHANNEL
      JOIN ATM_STATIONS AST ON TXN.TRL_CARD_ACPT_TERMINAL_IDENT = AST.AST_TERMINAL_ID
      JOIN ATM_BRANCHES ABR ON AST.AST_ABR_ID = ABR.ABR_ID
WHERE
      TXN.TRL_TSC_CODE IN (1, 128)
      AND TXN.TRL_TQU_ID IN (''F'',''R'')
      AND TXN.TRL_DEO_NAME = {V_Deo_Name}
      AND TXN.TRL_FRD_REV_INST_ID IS NULL
	  AND TXN.TRL_ISS_NAME IS NULL
      AND {Branch_Code}
      AND {Terminal}
      AND {Txn_Date}
)
GROUP BY
      "BRANCH CODE",
      "BRANCH NAME",
      "TERMINAL"
ORDER BY
      "BRANCH CODE" ASC,
      "TERMINAL" ASC');
	  
	   i_TRAILER_QUERY := TO_CLOB('SELECT
      SUM(TXN.TRL_AMT_TXN) "A/R PER TERMINAL",
      COUNT(TXN.TRL_ID) "ITEMS"
FROM
      TRANSACTION_LOG TXN
      JOIN TRANSACTION_LOG_CUSTOM TXNC ON TXN.TRL_ID=TXNC.TRL_ID
      JOIN CBC_TRAN_CODE CTR ON TXN.TRL_TSC_CODE = CTR.CTR_CODE AND TXNC.TRL_ORIGIN_CHANNEL = CTR.CTR_CHANNEL
      JOIN ATM_STATIONS AST ON TXN.TRL_CARD_ACPT_TERMINAL_IDENT = AST.AST_TERMINAL_ID
      JOIN ATM_BRANCHES ABR ON AST.AST_ABR_ID = ABR.ABR_ID
WHERE
      TXN.TRL_TSC_CODE IN (1, 128)
      AND TXN.TRL_TQU_ID IN (''F'',''R'')
      AND TXN.TRL_DEO_NAME = {V_Deo_Name}
      AND TXN.TRL_FRD_REV_INST_ID IS NULL
	  AND TXN.TRL_ISS_NAME IS NULL
      AND {Txn_Date}');

	   UPDATE REPORT_DEFINITION SET RED_BODY_QUERY = i_BODY_QUERY , RED_TRAILER_QUERY = i_TRAILER_QUERY WHERE RED_NAME = 'BNOB File';
	   
	   i_BODY_QUERY := TO_CLOB('SELECT
      SUM("Tran Amount") "Tran Amount",
      "A/C Number",
      "Currency Code of Account Number",
      "Part Tran Indicator",
      "Tran Particular",
      "Reference Currency Code",
      "Value Date",
      "Third Party Tran Description",
      "TRAN_DATE"
FROM(
SELECT
      TXN.TRL_TSC_CODE "Tran Code",
      GLA.GLA_NUMBER "A/C Number",
      CASE WHEN TXN.TRL_TXN_CUR_ISO_ID = 608 THEN ''PHP'' ELSE ''PHP'' END AS "Currency Code of Account Number",
      ''D'' AS "Part Tran Indicator",
      CASE WHEN GLE.GLE_DEBIT_DESCRIPTION = ''BANCNET AP ATM WITHDRAWAL'' THEN TXN.TRL_AMT_TXN ELSE NVL(TXN.TRL_ISS_CHARGE_AMT, 0) END AS "Tran Amount",
      GLE.GLE_DEBIT_DESCRIPTION "Tran Particular",
      CASE WHEN TXN.TRL_TXN_CUR_ISO_ID = 608 THEN ''PHP'' ELSE ''PHP'' END AS "Reference Currency Code",
      TO_CHAR(TXN.TRL_DATETIME_LOCAL_TXN, ''MM-DD-YYYY'') "Value Date",
      GLE.GLE_DEBIT_DESCRIPTION "Third Party Tran Description",
      TO_CHAR(TXN.TRL_DATETIME_LOCAL_TXN, ''MM-DD-YYYY'') "TRAN_DATE"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_DEBIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
	  AND TLC.TRL_ORIGIN_CHANNEL = ''BNT''
      AND TXN.TRL_ISS_NAME = {V_Iss_Name}
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND TXN.TRL_FRD_REV_INST_ID IS NULL
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Issuer'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
      AND {GL_Description}
      AND {Txn_Date}
)
GROUP BY
    "A/C Number",
    "Currency Code of Account Number",
    "Part Tran Indicator",
    "Tran Particular",
    "Reference Currency Code",
    "Value Date",
    "Third Party Tran Description",
    "TRAN_DATE"
ORDER BY
     "Tran Particular" DESC
START SELECT
      SUM("Tran Amount") "Tran Amount",
      "A/C Number",
      "Currency Code of Account Number",
      "Part Tran Indicator",
      "Tran Particular",
      "Reference Currency Code",
      "Value Date",
      "Third Party Tran Description",
      "TRAN_DATE"
FROM(
SELECT
      TXN.TRL_TSC_CODE "Tran Code",
      GLA.GLA_NUMBER "A/C Number",
      CASE WHEN TXN.TRL_TXN_CUR_ISO_ID = 608 THEN ''PHP'' ELSE ''PHP'' END AS "Currency Code of Account Number",
      ''C'' AS "Part Tran Indicator",
      CASE WHEN GLE.GLE_CREDIT_DESCRIPTION = ''BANCNET AP ATM WITHDRAWAL'' THEN TXN.TRL_AMT_TXN ELSE NVL(TXN.TRL_ISS_CHARGE_AMT, 0) END AS "Tran Amount",
      GLE.GLE_CREDIT_DESCRIPTION "Tran Particular",
      CASE WHEN TXN.TRL_TXN_CUR_ISO_ID = 608 THEN ''PHP'' ELSE ''PHP'' END AS "Reference Currency Code",
      TO_CHAR(TXN.TRL_DATETIME_LOCAL_TXN, ''MM-DD-YYYY'') "Value Date",
      GLE.GLE_CREDIT_DESCRIPTION "Third Party Tran Description",
      TO_CHAR(TXN.TRL_DATETIME_LOCAL_TXN, ''MM-DD-YYYY'') "TRAN_DATE"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_CREDIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
	  AND TLC.TRL_ORIGIN_CHANNEL = ''BNT''
      AND TXN.TRL_ISS_NAME = {V_Iss_Name}
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND TXN.TRL_FRD_REV_INST_ID IS NULL
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Issuer'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
      AND {GL_Description}
      AND {Txn_Date}
)
GROUP BY
    "A/C Number",
    "Currency Code of Account Number",
    "Part Tran Indicator",
    "Tran Particular",
    "Reference Currency Code",
    "Value Date",
    "Third Party Tran Description",
    "TRAN_DATE"
ORDER BY
     "Tran Particular" DESC
END');

	UPDATE REPORT_DEFINITION SET RED_BODY_QUERY = i_BODY_QUERY WHERE RED_NAME = 'ATM CBC GL ISS 001';
	
	
	i_BODY_QUERY := TO_CLOB('SELECT
      GLA.GLA_NUMBER "GL ACCOUNT NUMBER",
      GLA.GLA_NAME "GL ACCOUNT NAME",
      TXN.TRL_DEST_STAN "CODE",
      CASE WHEN GLE.GLE_DEBIT_DESCRIPTION = ''BANCNET AP ATM WITHDRAWAL'' THEN TXN.TRL_AMT_TXN ELSE NVL(TXN.TRL_ISS_CHARGE_AMT, 0) END AS "DEBIT",
      0 AS "CREDIT",
      TXN.TRL_ACCOUNT_1_ACN_ID "FROM ACCOUNT NO",
      TXN.TRL_ACCOUNT_1_ACN_ID_EKY_ID,
      GLE.GLE_DEBIT_DESCRIPTION "DESCRIPTION"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_DEBIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
     AND TLC.TRL_ORIGIN_CHANNEL = ''BNT''
      AND TXN.TRL_ISS_NAME  = {V_Iss_Name}
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND TXN.TRL_FRD_REV_INST_ID IS NULL
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Issuer'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
      AND {GL_Description}
      AND {Txn_Date}
GROUP BY
      GLA.GLA_NUMBER,
      GLA.GLA_NAME,
      TXN.TRL_DEST_STAN,
      TXN.TRL_AMT_TXN,
      TXN.TRL_ISS_CHARGE_AMT,
      TXN.TRL_ACCOUNT_1_ACN_ID,
      TXN.TRL_ACCOUNT_1_ACN_ID_EKY_ID,
      GLE.GLE_DEBIT_DESCRIPTION
ORDER BY
      TXN.TRL_DEST_STAN ASC,
      GLE.GLE_DEBIT_DESCRIPTION DESC
START SELECT
      GLA.GLA_NUMBER "GL ACCOUNT NUMBER",
      GLA.GLA_NAME "GL ACCOUNT NAME",
      TXN.TRL_DEST_STAN "CODE",
      0 AS "DEBIT",
      CASE WHEN GLE.GLE_CREDIT_DESCRIPTION = ''BANCNET AP ATM WITHDRAWAL'' THEN TXN.TRL_AMT_TXN ELSE NVL(TXN.TRL_ISS_CHARGE_AMT, 0) END AS "CREDIT",
      TXN.TRL_ACCOUNT_1_ACN_ID "FROM ACCOUNT NO",
      TXN.TRL_ACCOUNT_1_ACN_ID_EKY_ID,
      GLE.GLE_CREDIT_DESCRIPTION "DESCRIPTION"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_CREDIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID IN (''A'', ''F'')
      AND TLC.TRL_ORIGIN_CHANNEL = ''BNT''
      AND TXN.TRL_ISS_NAME = {V_Iss_Name}
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND TXN.TRL_FRD_REV_INST_ID IS NULL
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Issuer'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
      AND {GL_Description}
      AND {Txn_Date}
GROUP BY
      GLA.GLA_NUMBER,
      GLA.GLA_NAME,
      TXN.TRL_DEST_STAN,
      TXN.TRL_AMT_TXN,
      TXN.TRL_ISS_CHARGE_AMT,
      TXN.TRL_ACCOUNT_1_ACN_ID,
      TXN.TRL_ACCOUNT_1_ACN_ID_EKY_ID,
      GLE.GLE_CREDIT_DESCRIPTION
ORDER BY
      TXN.TRL_DEST_STAN ASC,
      GLE.GLE_CREDIT_DESCRIPTION DESC
END');

	i_TRAILER_QUERY := TO_CLOB('SELECT
      CASE WHEN GLE.GLE_DEBIT_DESCRIPTION = ''BANCNET AP ATM WITHDRAWAL'' THEN SUM(TXN.TRL_AMT_TXN) ELSE SUM(NVL(TXN.TRL_ISS_CHARGE_AMT, 0)) END AS "TOTAL DEBIT",
      0 AS "TOTAL CREDIT"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_DEBIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
      AND TLC.TRL_ORIGIN_CHANNEL = ''BNT''
      AND TXN.TRL_ISS_NAME = {V_Iss_Name}
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND TXN.TRL_FRD_REV_INST_ID IS NULL
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Issuer'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
      AND {GL_Description}
      AND {Txn_Date}
GROUP BY
      GLE.GLE_DEBIT_DESCRIPTION
ORDER BY
      GLE.GLE_DEBIT_DESCRIPTION DESC
START SELECT
      0 AS "TOTAL DEBIT",
      CASE WHEN GLE.GLE_CREDIT_DESCRIPTION = ''BANCNET AP ATM WITHDRAWAL'' THEN SUM(TXN.TRL_AMT_TXN) ELSE SUM(NVL(TXN.TRL_ISS_CHARGE_AMT, 0)) END AS "TOTAL CREDIT"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_CREDIT_ACCOUNT = GLA.GLA_NAME
WHERE
     
      TXN.TRL_TQU_ID IN (''A'', ''F'')
      AND TLC.TRL_ORIGIN_CHANNEL = ''BNT''
      AND TXN.TRL_ISS_NAME = {V_Iss_Name}
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND TXN.TRL_FRD_REV_INST_ID IS NULL
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Issuer'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
      AND {GL_Description}
      AND {Txn_Date}
GROUP BY
      GLE.GLE_CREDIT_DESCRIPTION
ORDER BY
      GLE.GLE_CREDIT_DESCRIPTION DESC
END');

	UPDATE REPORT_DEFINITION SET RED_BODY_QUERY = i_BODY_QUERY , RED_TRAILER_QUERY = i_TRAILER_QUERY WHERE RED_NAME = 'Block Sheet Listing For Issuer';
	
	i_BODY_QUERY := TO_CLOB('SELECT
      SUM("DEBITS") "DEBITS",
      SUM("CREDITS") "CREDITS",
      "GL ACCOUNT NUMBER",
      "GL ACCOUNT NAME",
      "Tran Particular"
FROM(
SELECT
      TXN.TRL_TSC_CODE "Tran Code",
      GLE.GLE_DEBIT_DESCRIPTION "Tran Particular",
      GLA.GLA_NUMBER "GL ACCOUNT NUMBER",
      GLA.GLA_NAME "GL ACCOUNT NAME",
      CASE WHEN GLE.GLE_DEBIT_DESCRIPTION = ''BANCNET AP ATM WITHDRAWAL'' THEN TXN.TRL_AMT_TXN ELSE NVL(TXN.TRL_ISS_CHARGE_AMT, 0) END AS "DEBITS",
      0 AS "CREDITS"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_DEBIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
      AND TLC.TRL_ORIGIN_CHANNEL = ''BNT''
      AND TXN.TRL_ISS_NAME = {V_Iss_Name}
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND TXN.TRL_FRD_REV_INST_ID IS NULL
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Issuer'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
      AND {GL_Description}
      AND {Txn_Date}
)
GROUP BY
    "GL ACCOUNT NUMBER",
    "GL ACCOUNT NAME",
    "Tran Particular"
ORDER BY
     "Tran Particular" DESC
START SELECT
      SUM("DEBITS") "DEBITS",
      SUM("CREDITS") "CREDITS",
      "GL ACCOUNT NUMBER",
      "GL ACCOUNT NAME",
      "Tran Particular"
FROM(
SELECT
      TXN.TRL_TSC_CODE "Tran Code",
      GLE.GLE_CREDIT_DESCRIPTION "Tran Particular",
      GLA.GLA_NUMBER "GL ACCOUNT NUMBER",
      GLA.GLA_NAME "GL ACCOUNT NAME",
      0 AS "DEBITS",
      CASE WHEN GLE.GLE_CREDIT_DESCRIPTION = ''BANCNET AP ATM WITHDRAWAL'' THEN TXN.TRL_AMT_TXN ELSE NVL(TXN.TRL_ISS_CHARGE_AMT, 0) END AS "CREDITS"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_CREDIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
      AND TLC.TRL_ORIGIN_CHANNEL = ''BNT''
      AND TXN.TRL_ISS_NAME = {V_Iss_Name}
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND TXN.TRL_FRD_REV_INST_ID IS NULL
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Issuer'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
      AND {GL_Description}
      AND {Txn_Date}
)
GROUP BY
    "GL ACCOUNT NUMBER",
    "GL ACCOUNT NAME",
    "Tran Particular"
ORDER BY
     "Tran Particular" DESC
END');


	UPDATE REPORT_DEFINITION SET RED_BODY_QUERY = i_BODY_QUERY WHERE RED_NAME = 'Final Proof Sheet For Issuer';
	
	i_BODY_QUERY := TO_CLOB('SELECT
      "BRANCH CODE",
      SUM("Tran Amount") "Tran Amount",
      "A/C Number",
      "Currency Code of Account Number",
      "Part Tran Indicator",
      "Tran Particular",
      "Reference Currency Code",
      "Value Date",
      "Third Party Tran Description",
      "TRAN_DATE"
FROM(
SELECT
      SUBSTR(TXN.TRL_CARD_ACPT_TERMINAL_IDENT, 1, 4) "BRANCH CODE",
      GLA.GLA_NUMBER "A/C Number",
      CASE WHEN TXN.TRL_TXN_CUR_ISO_ID = 608 THEN ''PHP'' ELSE ''PHP'' END AS "Currency Code of Account Number",
      ''D'' AS "Part Tran Indicator",
      CASE WHEN GLE.GLE_DEBIT_DESCRIPTION IN (''INTER-ENTITY AP ATM WITHDRAWAL'', ''INTER-ENTITY AR ATM WITHDRAWAL'', ''INTER-ENTITY FUND TRANSFER DR'', ''INTER-ENTITY FUND TRANSFER CR'') THEN TXN.TRL_AMT_TXN ELSE NVL(TXN.TRL_ACQ_CHARGE_AMT, 0) END AS "Tran Amount",
      GLE.GLE_DEBIT_DESCRIPTION "Tran Particular",
      CASE WHEN TXN.TRL_TXN_CUR_ISO_ID = 608 THEN ''PHP'' ELSE ''PHP'' END AS "Reference Currency Code",
      TO_CHAR(TXN.TRL_DATETIME_LOCAL_TXN, ''MM-DD-YYYY'') "Value Date",
      GLE.GLE_DEBIT_DESCRIPTION "Third Party Tran Description",
      TO_CHAR(TXN.TRL_DATETIME_LOCAL_TXN, ''MM-DD-YYYY'') "TRAN_DATE"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_DEBIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND {Channel}
      AND {Branch_Code}
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Inter-Entity'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
	  AND TLC.TRL_ORIGIN_CHANNEL = ''ATM''
      AND {GL_Description}
      AND {Txn_Date}
)
GROUP BY
    "BRANCH CODE",
    "A/C Number",
    "Currency Code of Account Number",
    "Part Tran Indicator",
    "Tran Particular",
    "Reference Currency Code",
    "Value Date",
    "Third Party Tran Description",
    "TRAN_DATE"
ORDER BY
     "BRANCH CODE" ASC,
     "Tran Particular" DESC
START SELECT
      "BRANCH CODE",
      SUM("Tran Amount") "Tran Amount",
      "A/C Number",
      "Currency Code of Account Number",
      "Part Tran Indicator",
      "Tran Particular",
      "Reference Currency Code",
      "Value Date",
      "Third Party Tran Description",
      "TRAN_DATE"
FROM(
SELECT
      SUBSTR(TXN.TRL_CARD_ACPT_TERMINAL_IDENT, 1, 4) "BRANCH CODE",
      GLA.GLA_NUMBER "A/C Number",
      CASE WHEN TXN.TRL_TXN_CUR_ISO_ID = 608 THEN ''PHP'' ELSE ''PHP'' END AS "Currency Code of Account Number",
      ''C'' AS "Part Tran Indicator",
      CASE WHEN GLE.GLE_CREDIT_DESCRIPTION IN (''INTER-ENTITY AP ATM WITHDRAWAL'', ''INTER-ENTITY AR ATM WITHDRAWAL'', ''INTER-ENTITY FUND TRANSFER DR'', ''INTER-ENTITY FUND TRANSFER CR'') THEN TXN.TRL_AMT_TXN ELSE NVL(TXN.TRL_ACQ_CHARGE_AMT, 0) END AS "Tran Amount",
      GLE.GLE_CREDIT_DESCRIPTION "Tran Particular",
      CASE WHEN TXN.TRL_TXN_CUR_ISO_ID = 608 THEN ''PHP'' ELSE ''PHP'' END AS "Reference Currency Code",
      TO_CHAR(TXN.TRL_DATETIME_LOCAL_TXN, ''MM-DD-YYYY'') "Value Date",
      GLE.GLE_CREDIT_DESCRIPTION "Third Party Tran Description",
      TO_CHAR(TXN.TRL_DATETIME_LOCAL_TXN, ''MM-DD-YYYY'') "TRAN_DATE"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_CREDIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND {Channel}
      AND {Branch_Code}
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Inter-Entity'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
	  AND TLC.TRL_ORIGIN_CHANNEL = ''ATM''
      AND {GL_Description}
      AND {Txn_Date}
)
GROUP BY
    "BRANCH CODE",
    "A/C Number",
    "Currency Code of Account Number",
    "Part Tran Indicator",
    "Tran Particular",
    "Reference Currency Code",
    "Value Date",
    "Third Party Tran Description",
    "TRAN_DATE"
ORDER BY
     "BRANCH CODE" ASC,
     "Tran Particular" DESC
END');

	
	UPDATE REPORT_DEFINITION SET RED_BODY_QUERY = i_BODY_QUERY WHERE RED_NAME = 'ATM CBC GL IE 001';
	
	i_BODY_QUERY := TO_CLOB('SELECT
      SUBSTR(TXN.TRL_CARD_ACPT_TERMINAL_IDENT, 1, 4) "BRANCH CODE",
      GLA.GLA_NUMBER "GL ACCOUNT NUMBER",
      GLA.GLA_NAME "GL ACCOUNT NAME",
      TXN.TRL_DEST_STAN "CODE",
      CASE WHEN GLE.GLE_DEBIT_DESCRIPTION IN (''INTER-ENTITY AP ATM WITHDRAWAL'', ''INTER-ENTITY AR ATM WITHDRAWAL'', ''INTER-ENTITY FUND TRANSFER DR'', ''INTER-ENTITY FUND TRANSFER CR'') THEN TXN.TRL_AMT_TXN ELSE NVL(TXN.TRL_ACQ_CHARGE_AMT, 0) END AS "DEBIT",
      0 AS "CREDIT",
      TXN.TRL_ACCOUNT_1_ACN_ID "FROM ACCOUNT NO",
      TXN.TRL_ACCOUNT_1_ACN_ID_EKY_ID,
      GLE.GLE_DEBIT_DESCRIPTION "DESCRIPTION"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_DEBIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND {Channel}
      AND {Branch_Code}
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Inter-Entity'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
	  AND TLC.TRL_ORIGIN_CHANNEL = ''ATM''
      AND {GL_Description}
      AND {Txn_Date}
GROUP BY
      TXN.TRL_CARD_ACPT_TERMINAL_IDENT,
      GLA.GLA_NUMBER,
      GLA.GLA_NAME,
      TXN.TRL_DEST_STAN,
      TXN.TRL_AMT_TXN,
      TXN.TRL_ACQ_CHARGE_AMT,
      TXN.TRL_ACCOUNT_1_ACN_ID,
      TXN.TRL_ACCOUNT_1_ACN_ID_EKY_ID,
      GLE.GLE_DEBIT_DESCRIPTION
ORDER BY
      TXN.TRL_CARD_ACPT_TERMINAL_IDENT ASC,
      TXN.TRL_DEST_STAN ASC,
      GLE.GLE_DEBIT_DESCRIPTION DESC
START SELECT
      SUBSTR(TXN.TRL_CARD_ACPT_TERMINAL_IDENT, 1, 4) "BRANCH CODE",
      GLA.GLA_NUMBER "GL ACCOUNT NUMBER",
      GLA.GLA_NAME "GL ACCOUNT NAME",
      TXN.TRL_DEST_STAN "CODE",
      0 AS "DEBIT",
      CASE WHEN GLE.GLE_CREDIT_DESCRIPTION IN (''INTER-ENTITY AP ATM WITHDRAWAL'', ''INTER-ENTITY AR ATM WITHDRAWAL'', ''INTER-ENTITY FUND TRANSFER DR'', ''INTER-ENTITY FUND TRANSFER CR'') THEN TXN.TRL_AMT_TXN ELSE NVL(TXN.TRL_ACQ_CHARGE_AMT, 0) END AS "CREDIT",
      TXN.TRL_ACCOUNT_1_ACN_ID "FROM ACCOUNT NO",
      TXN.TRL_ACCOUNT_1_ACN_ID_EKY_ID,
      GLE.GLE_CREDIT_DESCRIPTION "DESCRIPTION"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_CREDIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND {Channel}
      AND {Branch_Code}
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Inter-Entity'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
	  AND TLC.TRL_ORIGIN_CHANNEL = ''ATM''
      AND {GL_Description}
      AND {Txn_Date}
GROUP BY
      TXN.TRL_CARD_ACPT_TERMINAL_IDENT,
      GLA.GLA_NUMBER,
      GLA.GLA_NAME,
      TXN.TRL_DEST_STAN,
      TXN.TRL_AMT_TXN,
      TXN.TRL_ACQ_CHARGE_AMT,
      TXN.TRL_ACCOUNT_1_ACN_ID,
      TXN.TRL_ACCOUNT_1_ACN_ID_EKY_ID,
      GLE.GLE_CREDIT_DESCRIPTION
ORDER BY
      TXN.TRL_CARD_ACPT_TERMINAL_IDENT ASC,
      TXN.TRL_DEST_STAN ASC,
      GLE.GLE_CREDIT_DESCRIPTION DESC
END');

	i_TRAILER_QUERY := TO_CLOB('SELECT
      CASE WHEN GLE.GLE_DEBIT_DESCRIPTION IN (''INTER-ENTITY AP ATM WITHDRAWAL'', ''INTER-ENTITY AR ATM WITHDRAWAL'', ''INTER-ENTITY FUND TRANSFER DR'', ''INTER-ENTITY FUND TRANSFER CR'') THEN SUM(TXN.TRL_AMT_TXN) ELSE SUM(NVL(TXN.TRL_ACQ_CHARGE_AMT, 0)) END AS "TOTAL DEBIT",
      0 AS "TOTAL CREDIT"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_DEBIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND {Channel}
      AND {Branch_Code}
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Inter-Entity'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
	  AND TLC.TRL_ORIGIN_CHANNEL = ''ATM''
      AND {GL_Description}
      AND {Txn_Date}
GROUP BY
      GLE.GLE_DEBIT_DESCRIPTION
ORDER BY
      GLE.GLE_DEBIT_DESCRIPTION DESC
START SELECT
      0 AS "TOTAL DEBIT",
      CASE WHEN GLE.GLE_CREDIT_DESCRIPTION IN (''INTER-ENTITY AP ATM WITHDRAWAL'', ''INTER-ENTITY AR ATM WITHDRAWAL'', ''INTER-ENTITY FUND TRANSFER DR'', ''INTER-ENTITY FUND TRANSFER CR'') THEN SUM(TXN.TRL_AMT_TXN) ELSE SUM(NVL(TXN.TRL_ACQ_CHARGE_AMT, 0)) END AS "TOTAL CREDIT"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_CREDIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND {Channel}
      AND {Branch_Code}
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Inter-Entity'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
	  AND TLC.TRL_ORIGIN_CHANNEL = ''ATM''
      AND {GL_Description}
      AND {Txn_Date}
GROUP BY
      GLE.GLE_CREDIT_DESCRIPTION
ORDER BY
      GLE.GLE_CREDIT_DESCRIPTION DESC
END');
	
	UPDATE REPORT_DEFINITION SET RED_BODY_QUERY = i_BODY_QUERY , RED_TRAILER_QUERY = i_TRAILER_QUERY WHERE RED_NAME = 'Block Sheet Listing For Inter-Entity';
	
	i_BODY_QUERY := TO_CLOB('SELECT
      SUM("DEBITS") "DEBITS",
      SUM("CREDITS") "CREDITS",
      "BRANCH CODE",
      "GL ACCOUNT NUMBER",
      "GL ACCOUNT NAME",
      "Tran Particular"
FROM(
SELECT
      SUBSTR(TXN.TRL_CARD_ACPT_TERMINAL_IDENT, 1, 4) "BRANCH CODE",
      GLE.GLE_DEBIT_DESCRIPTION "Tran Particular",
      GLA.GLA_NUMBER "GL ACCOUNT NUMBER",
      GLA.GLA_NAME "GL ACCOUNT NAME",
      CASE WHEN GLE.GLE_DEBIT_DESCRIPTION IN (''INTER-ENTITY AP ATM WITHDRAWAL'', ''INTER-ENTITY AR ATM WITHDRAWAL'', ''INTER-ENTITY FUND TRANSFER DR'', ''INTER-ENTITY FUND TRANSFER CR'') THEN TXN.TRL_AMT_TXN ELSE NVL(TXN.TRL_ACQ_CHARGE_AMT, 0) END AS "DEBITS",
      0 AS "CREDITS"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_DEBIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND {Channel}
      AND {Branch_Code}
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Inter-Entity'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
	  AND TLC.TRL_ORIGIN_CHANNEL = ''ATM''
      AND {GL_Description}
      AND {Txn_Date}
)
GROUP BY
    "BRANCH CODE",
    "GL ACCOUNT NUMBER",
    "GL ACCOUNT NAME",
    "Tran Particular"
ORDER BY
     "BRANCH CODE" ASC,
     "Tran Particular" DESC
START SELECT
      SUM("DEBITS") "DEBITS",
      SUM("CREDITS") "CREDITS",
      "BRANCH CODE",
      "GL ACCOUNT NUMBER",
      "GL ACCOUNT NAME",
      "Tran Particular"
FROM(
SELECT
      SUBSTR(TXN.TRL_CARD_ACPT_TERMINAL_IDENT, 1, 4) "BRANCH CODE",
      GLE.GLE_CREDIT_DESCRIPTION "Tran Particular",
      GLA.GLA_NUMBER "GL ACCOUNT NUMBER",
      GLA.GLA_NAME "GL ACCOUNT NAME",
      0 AS "DEBITS",
      CASE WHEN GLE.GLE_CREDIT_DESCRIPTION IN (''INTER-ENTITY AP ATM WITHDRAWAL'', ''INTER-ENTITY AR ATM WITHDRAWAL'', ''INTER-ENTITY FUND TRANSFER DR'', ''INTER-ENTITY FUND TRANSFER CR'') THEN TXN.TRL_AMT_TXN ELSE NVL(TXN.TRL_ACQ_CHARGE_AMT, 0) END AS "CREDITS"
FROM
      TRANSACTION_LOG TXN
	  JOIN TRANSACTION_LOG_CUSTOM TLC ON TXN.TRL_ID = TLC.TRL_ID
      JOIN CBC_GL_ENTRY GLE ON TXN.TRL_TSC_CODE = GLE.GLE_TRAN_TYPE
      JOIN CBC_GL_ACCOUNT GLA ON GLE.GLE_CREDIT_ACCOUNT = GLA.GLA_NAME
WHERE
      TXN.TRL_TQU_ID = ''F''
      AND TXN.TRL_ACTION_RESPONSE_CODE = 0
      AND NVL(TXN.TRL_POST_COMPLETION_CODE, ''O'') != ''R''
      AND {Channel}
      AND {Branch_Code}
      AND GLE.GLE_GLT_ID = (SELECT GLT_ID FROM CBC_GL_TRANSACTION WHERE GLT_NAME = ''Inter-Entity'')
      AND GLE.GLE_ENTRY_ENABLED = ''Y''
	  AND TLC.TRL_ORIGIN_CHANNEL NOT IN (''CDM'',''BRM'')
	  AND TLC.TRL_ORIGIN_CHANNEL = ''ATM''
      AND {GL_Description}
      AND {Txn_Date}
)
GROUP BY
    "BRANCH CODE",
    "GL ACCOUNT NUMBER",
    "GL ACCOUNT NAME",
    "Tran Particular"
ORDER BY
     "BRANCH CODE" ASC,
     "Tran Particular" DESC
END');
	
	
	UPDATE REPORT_DEFINITION SET RED_BODY_QUERY = i_BODY_QUERY WHERE RED_NAME = 'Final Proof Sheet For Inter-Entity';
	

END;
/